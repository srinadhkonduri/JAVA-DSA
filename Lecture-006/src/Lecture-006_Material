Input in Java
The Scanner class is used to get user input, and it is found in the java.util package.

nextBoolean() Reads a boolean value from the user
nextByte() Reads a byte value from the user
nextDouble() Reads a double value from the user
nextFloat() Reads a float value from the user
nextInt() Reads a int value from the user
nextLine() Reads a String value from the user
nextLong() Reads a long value from the user
nextShort() Reads a short value from the user

Note : nextLine() reads '\n' where as other functions ignore '\n',
and treat it as trigger to stop reading input.

Operators in Java
There are many types of operators in Java which are given below:

Unary Operator a. The Java unary operators require only one operand.

Arithmetic Operator a. Java arithmetic operators are used to perform
addition, subtraction, multiplication, and division.
They act as basic mathematical operations.

Shift Operator a. The Java left shift operator << is used to
shift all of the bits in a value to the left side of a
specified number of times. b. The Java right shift operator >> is
used to move the value of the left operand to right by the
number of bits specified by the right operand.
c. For positive number, >> and >>> works same. For negative number, >>>
changes parity bit (MSB) to 0.

Relational Operator a. comparison and equality operators

Bitwise Operator a. Bitwise operators are used to performing the
manipulation of individual bits of a number.

Logical Operator a. Logical operators are used to performing
logical “AND”, “OR” and “NOT” operations. They are used to combine two
or more conditions/constraints or to complement the evaluation
of the original condition under particular consideration

Ternary Operator a. Java Ternary operator is used as one
line replacement for if-then-else statement and used a lot in Java
programming. It is the only conditional operator which takes three
operands.

Assignment Operator a. Java assignment operator is one of the most
common operators. It is used to assign the value on its right to the
operand on its left.